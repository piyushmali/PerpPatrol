from abc import ABC, abstractmethod

class ExchangeClient(ABC):
    def __init__(self, cfg, log):
        self.cfg, self.log = cfg, log
    @abstractmethod
    async def connect(self): ...
    @abstractmethod
    async def place_limit(self, symbol:str, side:str, price:float, size:float)->str: ...
    @abstractmethod
    async def cancel(self, order_id:str)->None: ...
    @abstractmethod
    async def replace(self, order_id:str, price:float, size:float)->str: ...
    @abstractmethod
    async def positions(self)->dict: ...
    @abstractmethod
    async def close(self): ...
